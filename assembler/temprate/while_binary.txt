/*
calculate sum of mem[l:r)

sum = 0
now = l
while(now < r) {
    sum += mem[now];
    now++
}
mem[r] = sum
*/
/*
r1:l
r2:r
r3:sum
r4:now
r5:mem[now]
*/

memory[0] = 16'b1111111111111111; // NOP
memory[1] = 16'b1000000100000011; // LI 1 3
memory[2] = 16'b1000001000000110; // LI 2 6
memory[3] = 16'b1000001100000000; // LI 3 0
memory[4] = 16'b1100110001100000; // MOV 4 1
memory[5] = 16'b1110001001010000; // CMP 2 4
memory[6] = 16'b1011101000000100; // BLE 4
memory[7] = 16'b0010110000000000; // LD 5 0(4)
memory[8] = 16'b1110101100000000; // ADD 3 5
memory[9] = 16'b1000110000000001; // ADDI 4 1
memory[10] = 16'b1010000011111010; // B -6
memory[11] = 16'b0101101000000000; // ST 3 0(2)
memory[12] = 16'b1100000011110000; // HLT
